<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MrAbe1&#39;Blog</title>
  
  <subtitle>Everyday you have is only today</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://abe1.xyz/"/>
  <updated>2019-06-20T02:31:02.037Z</updated>
  <id>https://abe1.xyz/</id>
  
  <author>
    <name>MrAbe1</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1002 写出这个数 (20 分)</title>
    <link href="https://abe1.xyz/2019/06/basic_1002"/>
    <id>https://abe1.xyz/2019/06/basic_1002</id>
    <published>2019-06-19T13:13:04.000Z</published>
    <updated>2019-06-20T02:31:02.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目名称"><a href="#题目名称" class="headerlink" title="题目名称"></a>题目名称</h1><blockquote><p>1002 写出这个数 (20 分)</p></blockquote><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><blockquote><p>读入一个正整数 n，计算其各位数字之和，用汉语拼音写出和的每一位数字。</p></blockquote><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><blockquote><p>每个测试输入包含 1 个测试用例，即给出自然数 n 的值。这里保证n小于$$10^{100}$$</p></blockquote><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><blockquote><p>在一行内输出 n 的各位数字之和的每一位，拼音数字间有 1 空格，但一行中最后一个拼音数字后没有空格。</p></blockquote><h1 id="输入样式"><a href="#输入样式" class="headerlink" title="输入样式"></a>输入样式</h1><blockquote><p>1234567890987654321123456789</p></blockquote><h1 id="输出样式"><a href="#输出样式" class="headerlink" title="输出样式"></a>输出样式</h1><blockquote><p>yi san wu</p></blockquote><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>本题是一道字符串处理的问题，涉及了整形和字符串的转化问题。思路很清晰，就是读取一个数字型的字符串 然后逐位相加，得到整形数字再转换成字符串处理。逐位用一个switch…case 或者声明数组建立与拼音的对应关系。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="AC的代码"><a href="#AC的代码" class="headerlink" title="AC的代码"></a>AC的代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1000000</span>];</span><br><span class="line"><span class="keyword">char</span> c[<span class="number">100</span>][<span class="number">5</span>]; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">10</span>][<span class="number">5</span>]=&#123;<span class="string">"ling"</span>,<span class="string">"yi"</span>,<span class="string">"er"</span>,<span class="string">"san"</span>,<span class="string">"si"</span>,<span class="string">"wu"</span>,<span class="string">"liu"</span>,<span class="string">"qi"</span>,<span class="string">"ba"</span>,<span class="string">"jiu"</span>&#125;;</span><br><span class="line"><span class="keyword">while</span>(gets(a)!=<span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a);i++)&#123;</span><br><span class="line">sum += a[i]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(sum!=<span class="number">0</span>)&#123;</span><br><span class="line">temp = sum%<span class="number">10</span>;</span><br><span class="line">sum /= <span class="number">10</span>;</span><br><span class="line"><span class="comment">//c[j++] = b[temp];C语言中不能把一个字符数组直接给另一个字符数组赋值，必须借助strcpy。C++可以</span></span><br><span class="line"><span class="built_in">strcpy</span>(c[j++],b[temp]); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j<span class="number">-1</span>; k&gt;=<span class="number">0</span>; k--)&#123;</span><br><span class="line"><span class="keyword">if</span>(k!=<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s "</span>,c[k]);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,c[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="原先的代码"><a href="#原先的代码" class="headerlink" title="原先的代码:"></a>原先的代码:</h2><p>原先的代码思想想到了用switch……case，但是一开始想的是新建函数fun(int a) 参数是一位整形数字，返回类型是字符串数组，直接把数字转换成对应的拼音返回。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> b[<span class="number">7</span>];</span><br><span class="line">    <span class="keyword">switch</span>(a)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: b =  <span class="string">"yi"</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: b =  <span class="string">"er"</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>: b =  <span class="string">"san"</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>: b =  <span class="string">"si"</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>: b =  <span class="string">"wu"</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>: b =  <span class="string">"liu"</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>: b =  <span class="string">"qi"</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>: b =  <span class="string">"ba"</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>: b =  <span class="string">"jiu"</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>: b =  <span class="string">"ling"</span>;</span><br><span class="line">    <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">    &#125;   </span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是<strong>too young too simple，somtimes native！</strong>报的错误是不能把一个常量的字符串赋值给一个字符串。第二种想法是直接写一个函数change把一串数字转换成对应字符串,然后利用C语言提供的str的相关函数，实现对应的转换。总而言之即，第一种想法是，对于和sum一位一位转换成对应的拼音字符串再输出，第二种想法是先把和sum转成字符串，再一个一个处理字符（毕竟有函数可以借用）。</p><h3 id="原先代码一"><a href="#原先代码一" class="headerlink" title="原先代码一:"></a>原先代码一:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">fun</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> b[<span class="number">7</span>];</span><br><span class="line">    <span class="keyword">switch</span>(a)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: b =  <span class="string">"yi"</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: b =  <span class="string">"er"</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>: b =  <span class="string">"san"</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>: b =  <span class="string">"si"</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>: b =  <span class="string">"wu"</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>: b =  <span class="string">"liu"</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>: b =  <span class="string">"qi"</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>: b =  <span class="string">"ba"</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>: b =  <span class="string">"jiu"</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>: b =  <span class="string">"ling"</span>;<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">    &#125;   </span><br><span class="line"><span class="keyword">return</span> b;</span><br><span class="line">&#125;<span class="comment">//这方法会报错，知道怎么改的同学麻烦不吝赐教</span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1000000</span>];</span><br><span class="line"><span class="keyword">char</span> c[<span class="number">100</span>][<span class="number">5</span>]; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(gets(a)!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">//统计位数 </span></span><br><span class="line"><span class="keyword">char</span> t[<span class="number">5</span>]; </span><br><span class="line"><span class="keyword">char</span> b[<span class="number">100</span>][<span class="number">5</span>]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a);i++)&#123;</span><br><span class="line">sum += a[i]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(sum!=<span class="number">0</span>)&#123;</span><br><span class="line">count++;</span><br><span class="line">temp = sum%<span class="number">10</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(b[count++],fun(temp)); </span><br><span class="line">sum /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=count<span class="number">-1</span>; k&gt;<span class="number">0</span>; k--)&#123; <span class="comment">//逆序输出拼音</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s "</span>,b[k]);</span><br><span class="line">&#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,b[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="原先代码二-（可AC）"><a href="#原先代码二-（可AC）" class="headerlink" title="原先代码二:（可AC）"></a>原先代码二:（可AC）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">change</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> d[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"> <span class="keyword">while</span>(n!=<span class="number">0</span>)&#123;</span><br><span class="line"> temp = n%<span class="number">10</span>;</span><br><span class="line"> b[i++] = temp + <span class="string">'0'</span>; </span><br><span class="line"> n/=<span class="number">10</span>;</span><br><span class="line">&#125; </span><br><span class="line">i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;<span class="built_in">strlen</span>(b);j++)</span><br><span class="line">&#123;</span><br><span class="line">d[j] = b[<span class="built_in">strlen</span>(b)-j<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">d[<span class="built_in">strlen</span>(b)+<span class="number">1</span>]=<span class="string">'\0'</span>;</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">char</span> a[<span class="number">1000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(gets(a)!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a);i++)&#123;</span><br><span class="line">sum += a[i]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> d[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(d,change(sum));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(d);i++)&#123;</span><br><span class="line">   <span class="keyword">switch</span>(d[i])&#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">'1'</span>: <span class="built_in">printf</span>(<span class="string">"yi"</span>);<span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="string">'2'</span>: <span class="built_in">printf</span>(<span class="string">"er"</span>);<span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="string">'3'</span>: <span class="built_in">printf</span>(<span class="string">"san"</span>);<span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="string">'4'</span>: <span class="built_in">printf</span>(<span class="string">"si"</span>);<span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="string">'5'</span>: <span class="built_in">printf</span>(<span class="string">"wu"</span>);<span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="string">'6'</span>: <span class="built_in">printf</span>(<span class="string">"liu"</span>);<span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="string">'7'</span>: <span class="built_in">printf</span>(<span class="string">"qi"</span>);<span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> <span class="string">'8'</span>: <span class="built_in">printf</span>(<span class="string">"ba"</span>);<span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="string">'9'</span>: <span class="built_in">printf</span>(<span class="string">"jiu"</span>);<span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> <span class="string">'0'</span>: <span class="built_in">printf</span>(<span class="string">"ling"</span>);<span class="keyword">break</span>; </span><br><span class="line"> </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(i!= <span class="built_in">strlen</span>(d)<span class="number">-1</span>)</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="启示"><a href="#启示" class="headerlink" title="启示"></a>启示</h1><p>写完这个代码之后，我对我C语言的水平已经有了清楚的认识~~（我好菜啊！）。在网上找了相关的题解看完之后，果断决定放弃C语言，改走C++了。C语言用char声明字符串数组确实不及C++的String 处理来的方便啊（-_-!），代码好简洁啊！</p>]]></content>
    
    <summary type="html">
    
      1002 写出这个数 (20 分)
    
    </summary>
    
      <category term="PAT乙级" scheme="https://abe1.xyz/categories/PAT%E4%B9%99%E7%BA%A7/"/>
    
    
      <category term="pat" scheme="https://abe1.xyz/tags/pat/"/>
    
      <category term="字符串处理" scheme="https://abe1.xyz/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>1001 害死人不偿命的(3n+1)猜想 (15 分)</title>
    <link href="https://abe1.xyz/2019/06/basic_1001"/>
    <id>https://abe1.xyz/2019/06/basic_1001</id>
    <published>2019-06-19T07:06:52.000Z</published>
    <updated>2019-06-19T13:20:51.086Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目名称"><a href="#题目名称" class="headerlink" title="题目名称"></a>题目名称</h1><blockquote><p>1001 害死人不偿命的(3n+1)猜想 (15 分)</p></blockquote><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><blockquote><p>卡拉兹(Callatz)猜想：<br>对任何一个正整数 n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3n+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 n=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……<br> 我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 n，简单地数一下，需要多少步（砍几下）才能得到 n=1？</p></blockquote><h1 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h1><blockquote><p>每个测试输入包含 1 个测试用例，即给出正整数 n 的值。</p></blockquote><h1 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h1><blockquote><p>输出从 n 计算到 1 需要的步数。</p></blockquote><h1 id="输入样式"><a href="#输入样式" class="headerlink" title="输入样式"></a>输入样式</h1><blockquote><p>3</p></blockquote><h1 id="输出样式"><a href="#输出样式" class="headerlink" title="输出样式"></a>输出样式</h1><blockquote><p>5</p></blockquote><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>很正常的一道模拟题</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> count;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line">count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(n!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">n /= <span class="number">2</span>;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"> n = (<span class="number">3</span>*n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line"> count++; </span><br><span class="line">&#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,count);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      1001 害死人不偿命的(3n+1)猜想
    
    </summary>
    
      <category term="PAT乙级" scheme="https://abe1.xyz/categories/PAT%E4%B9%99%E7%BA%A7/"/>
    
    
      <category term="模拟" scheme="https://abe1.xyz/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="pat" scheme="https://abe1.xyz/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>hexo的个人备忘录</title>
    <link href="https://abe1.xyz/2019/06/hexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%A4%87%E5%BF%98%E5%BD%95"/>
    <id>https://abe1.xyz/2019/06/hexo的个人备忘录</id>
    <published>2019-06-18T14:05:44.000Z</published>
    <updated>2019-06-18T14:18:08.025Z</updated>
    
    <content type="html"><![CDATA[<p>以next的主题为例</p><ul><li><p>修改博客布局的路径是\themes\next\layout\_macro\post.swig<br>其他控件的修改路径\themes\next\layout\_macro\ </p></li><li><p>修改文件字体大小的路径是\themes\next\source\css\_variables</p></li></ul>]]></content>
    
    <summary type="html">
    
      有关hexo文件修改的备忘录
    
    </summary>
    
      <category term="Hexo" scheme="https://abe1.xyz/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://abe1.xyz/tags/Hexo/"/>
    
  </entry>
  
</feed>
